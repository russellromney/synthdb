name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Lint with ruff
      run: |
        uv run ruff check synthdb/
    
    - name: Type check with mypy
      run: |
        uv run mypy synthdb/
    
    - name: Test with pytest
      run: |
        uv run pytest -v --cov=synthdb --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Build package
      run: |
        uv build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: |
        uv sync
    
    - name: Test SQLite backend
      run: |
        uv run python -c "
        import synthdb
        db = synthdb.connect('test.db', backend='sqlite')
        print('✅ SQLite backend works')
        "
    
    - name: Test Limbo backend (if available)
      run: |
        uv run python -c "
        import synthdb
        try:
            db = synthdb.connect('test.limbo', backend='limbo')
            print('✅ Limbo backend works')
        except ImportError:
            print('⚠️ Limbo backend not available, skipping')
        "